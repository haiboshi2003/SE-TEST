{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-beffe230\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_particles = _resolveComponent(\"vue-particles\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_vue_particles, {\n    id: \"tsparticles\",\n    particlesInit: $setup.particlesInit,\n    particlesLoaded: $setup.particlesLoaded\n  }), _createVNode(_component_vue_particles, {\n    id: \"tsparticles\",\n    particlesInit: $setup.particlesInit,\n    particlesLoaded: $setup.particlesLoaded,\n    options: {\n      background: {\n        color: {\n          value: '#fcfcfc'\n        }\n      },\n      fpsLimit: 80,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: false,\n            mode: 'push'\n          },\n          onHover: {\n            enable: false,\n            mode: 'attract',\n            parallax: {\n              enable: false,\n              force: 60,\n              smooth: 10\n            }\n          },\n          resize: true\n        },\n        modes: {\n          push: {\n            quantity: 4\n          },\n          attract: {\n            distance: 200,\n            duration: 0.4,\n            factor: 5\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: '#3a71f3'\n        },\n        line_linked: {\n          color: '#3a71f3',\n          distance: 150,\n          enable: true,\n          opacity: 0.4,\n          width: 1\n        },\n        move: {\n          attract: {\n            enable: false,\n            rotateX: 600,\n            rotateY: 1200\n          },\n          bounce: false,\n          direction: 'none',\n          enable: true,\n          out_mode: 'out',\n          random: false,\n          speed: 2,\n          straight: false\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 850\n          },\n          value: 75\n        },\n        opacity: {\n          anim: {\n            enable: false,\n            opacity_min: 0.1,\n            speed: 1,\n            sync: false\n          },\n          random: false,\n          value: 0.5\n        },\n        shape: {\n          type: 'circle'\n        },\n        size: {\n          random: true,\n          value: 5\n        }\n      },\n      detectRetina: true\n    }\n  })]), _createVNode(_component_router_view, {\n    class: \"router-view\"\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_vue_particles","particlesInit","$setup","particlesLoaded","options","_component_router_view","class"],"sources":["H:\\GitHub-Repository\\SSE-TongJi\\软件工程\\课程设计\\see\\src\\components\\MainMenu.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <vue-particles\r\n      id=\"tsparticles\"\r\n      :particlesInit=\"particlesInit\"\r\n      :particlesLoaded=\"particlesLoaded\"\r\n    />\r\n    <vue-particles\r\n      id=\"tsparticles\"\r\n      :particlesInit=\"particlesInit\"\r\n      :particlesLoaded=\"particlesLoaded\"\r\n      :options=\"{\r\n        background: {\r\n          color: {\r\n            value: '#fcfcfc',\r\n          },\r\n        },\r\n        fpsLimit: 80,\r\n        interactivity: {\r\n          events: {\r\n            onClick: {\r\n              enable: false,\r\n              mode: 'push',\r\n            },\r\n            onHover: {\r\n              enable: false,\r\n              mode: 'attract',\r\n              parallax: { enable: false, force: 60, smooth: 10 },\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            push: { quantity: 4 },\r\n            attract: { distance: 200, duration: 0.4, factor: 5 },\r\n          },\r\n        },\r\n        particles: {\r\n          color: {\r\n            value: '#3a71f3',\r\n          },\r\n          line_linked: {\r\n            color: '#3a71f3',\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.4,\r\n            width: 1,\r\n          },\r\n          move: {\r\n            attract: { enable: false, rotateX: 600, rotateY: 1200 },\r\n            bounce: false,\r\n            direction: 'none',\r\n            enable: true,\r\n            out_mode: 'out',\r\n            random: false,\r\n            speed: 2,\r\n            straight: false,\r\n          },\r\n          number: {\r\n            density: {\r\n              enable: true,\r\n              area: 850,\r\n            },\r\n            value: 75,\r\n          },\r\n          opacity: {\r\n            anim: { enable: false, opacity_min: 0.1, speed: 1, sync: false },\r\n            random: false,\r\n            value: 0.5,\r\n          },\r\n          shape: {\r\n            type: 'circle',\r\n          },\r\n          size: {\r\n            random: true,\r\n            value: 5,\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }\"\r\n    />\r\n  </div>\r\n  <router-view class=\"router-view\"></router-view>\r\n</template>\r\n<script setup>\r\n//import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\r\nimport { loadSlim } from \"tsparticles-slim\"; // if you are going to use `loadSlim`, install the \"tsparticles-slim\" package too.\r\n\r\nconst particlesInit = async (engine) => {\r\n  //await loadFull(engine);\r\n  await loadSlim(engine);\r\n};\r\n\r\nconst particlesLoaded = async (container) => {\r\n  console.log(\"Particles container loaded\", container);\r\n};\r\n</script>\r\n<style scoped>\r\n#app {\r\n  width: 100vh; /* 设置根组件的宽度，占浏览器宽度的90% */\r\n  height: 100vh; /* 设置根组件的高度 */\r\n  margin: auto; /* 居中显示 */\r\n  position: fixed;\r\n}\r\n.router-view {\r\n  /* background-color: blue; */\r\n  position: absolute;\r\n  top: 0; /* Start from the top of the container */\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1; /* Make sure it is above the particle background */\r\n  display: flex;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;;;uBADfC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CA+EM,OA/ENC,UA+EM,GA9EJC,YAAA,CAIEC,wBAAA;IAHAN,EAAE,EAAC,aAAa;IACfO,aAAa,EAAEC,MAAA,CAAAD,aAAa;IAC5BE,eAAe,EAAED,MAAA,CAAAC;MAEpBJ,YAAA,CAwEEC,wBAAA;IAvEAN,EAAE,EAAC,aAAa;IACfO,aAAa,EAAEC,MAAA,CAAAD,aAAa;IAC5BE,eAAe,EAAED,MAAA,CAAAC,eAAe;IAChCC,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAsEdL,YAAA,CAA+CM,sBAAA;IAAlCC,KAAK,EAAC;EAAa,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}