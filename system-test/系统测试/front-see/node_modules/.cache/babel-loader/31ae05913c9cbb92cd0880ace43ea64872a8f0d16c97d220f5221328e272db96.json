{"ast":null,"code":"import { ref } from \"vue\";\nimport { message } from \"ant-design-vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'myTest',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const imagePath = ref(null);\n    const selectedFile = ref(null);\n    const uploadImage = async () => {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile.value);\n      try {\n        const response = await axios.post(\"http://localhost:7078/upload\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        imagePath.value = `data:image/jpeg;base64,` + response.data.imageBase64;\n        console.log(imagePath.value);\n        console.log(imagePath.value);\n        //console.log(imagePath.value);\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n      }\n    };\n\n    //选择图片的预览部分\n    const previewUrl = ref(null);\n    const handleFileChange = event => {\n      selectedFile.value = event.target.files[0];\n      if (selectedFile.value) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          previewUrl.value = reader.result;\n        };\n        reader.readAsDataURL(selectedFile.value);\n      }\n    };\n\n    //按钮\n\n    const handleButtonClick2 = () => {\n      if (selectedFile.value) {\n        uploadImage();\n      } else {\n        message.warning(\"image is empty\");\n      }\n    };\n    function handleSelectFile() {\n      document.getElementById(\"btn_file\").click();\n    }\n    const __returned__ = {\n      imagePath,\n      selectedFile,\n      uploadImage,\n      previewUrl,\n      handleFileChange,\n      handleButtonClick2,\n      handleSelectFile,\n      ref,\n      get message() {\n        return message;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","message","axios","imagePath","selectedFile","uploadImage","formData","FormData","append","value","response","post","headers","data","imageBase64","console","log","error","previewUrl","handleFileChange","event","target","files","reader","FileReader","onload","result","readAsDataURL","handleButtonClick2","warning","handleSelectFile","document","getElementById","click"],"sources":["H:/GitHub-Repository/SSE-TongJi/软件工程/课程设计/see/src/components/myTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"contain2\">\r\n    <div class=\"putbutton\">\r\n      <input\r\n        id=\"btn_file\"\r\n        type=\"file\"\r\n        @change=\"handleFileChange\"\r\n        style=\"display: none\"\r\n        accept=\"image/jpeg\"\r\n      />\r\n      <button @click=\"handleSelectFile\" class=\"my_button\">上传图片</button>\r\n\r\n      <button @click=\"handleButtonClick2\" class=\"my_button\">检测</button>\r\n    </div>\r\n    <div class=\"showimg\">\r\n      <div class=\"building\">\r\n        <!-- <div class=\"mybutton\" @click=\"handleButtonClick2\"></div> -->\r\n        <img\r\n          v-if=\"selectedFile\"\r\n          :src=\"previewUrl\"\r\n          alt=\"Selected Image\"\r\n          class=\"scaled-image\"\r\n        />\r\n      </div>\r\n      <div class=\"building\">\r\n        <img\r\n          :src=\"imagePath\"\r\n          alt=\"Detected Image\"\r\n          class=\"scaled-image\"\r\n          v-if=\"imagePath\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { message } from \"ant-design-vue\";\r\nimport axios from \"axios\";\r\n\r\nconst imagePath = ref(null);\r\nconst selectedFile = ref(null);\r\n\r\nconst uploadImage = async () => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", selectedFile.value);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:7078/upload\",\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n\r\n    imagePath.value = `data:image/jpeg;base64,` + response.data.imageBase64;\r\n    console.log(imagePath.value);\r\n    console.log(imagePath.value);\r\n    //console.log(imagePath.value);\r\n  } catch (error) {\r\n    console.error(\"Error uploading image:\", error);\r\n  }\r\n};\r\n\r\n//选择图片的预览部分\r\nconst previewUrl = ref(null);\r\n\r\nconst handleFileChange = (event) => {\r\n  selectedFile.value = event.target.files[0];\r\n\r\n  if (selectedFile.value) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      previewUrl.value = reader.result;\r\n    };\r\n\r\n    reader.readAsDataURL(selectedFile.value);\r\n  }\r\n};\r\n\r\n//按钮\r\n\r\nconst handleButtonClick2 = () => {\r\n  if (selectedFile.value) {\r\n    uploadImage();\r\n  } else {\r\n    message.warning(\"image is empty\");\r\n  }\r\n};\r\n\r\nfunction handleSelectFile() {\r\n  document.getElementById(\"btn_file\").click();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.contain2 {\r\n  width: 70%;\r\n  height: 90%;\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: 1%; /* 向下移动 20px */\r\n  right: 8%; /* 向左移动 20px */\r\n}\r\n\r\n.putbutton {\r\n  /* background-color: #000; */\r\n  margin-top: 3px;\r\n  padding-left: 70%;\r\n}\r\n.showimg {\r\n  /* background-color: aqua; */\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.building {\r\n  background-color: rgba(255, 255, 255, 0.85);\r\n  border: 1px solid #000; /* 黑色边框 */\r\n\r\n  padding: 10px; /* 内边距，使内容不贴紧边框 */\r\n\r\n  /* margin: 200px auto; */\r\n  margin: 12% 0 0 10%;\r\n  width: 450px;\r\n  height: 400px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n}\r\n\r\n.scaled-image {\r\n  max-width: 100%; /* 设置最大宽度为父元素宽度 */\r\n  max-height: 100%; /* 设置最大高度为父元素高度 */\r\n  object-fit: contain; /* 保持图像的纵横比，完全适应元素框，可能会在父元素内留有空白 */\r\n  padding: 0px;\r\n  object-position: center center; /* 图像在其容器中垂直和水平居中 */\r\n}\r\n\r\n.my_button {\r\n  color: #333333;\r\n  background-color: #fff;\r\n  padding: 10px 30px;\r\n  margin-right: 10%;\r\n  outline: none;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.my_button:hover {\r\n  background-color: rgb(10, 150, 139); /* 将悬停背景颜色设为蓝色 */\r\n  cursor: pointer; /* 将鼠标指针形状设置为手形 */\r\n}\r\n</style>\r\n"],"mappings":"AAqCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,SAAS,GAAGH,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMI,YAAY,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,YAAY,CAACK,KAAK,CAAC;MAE3C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/B,8BAA8B,EAC9BL,QAAQ,EACR;UACEM,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAEDT,SAAS,CAACM,KAAK,GAAG,yBAAyB,GAAGC,QAAQ,CAACG,IAAI,CAACC,WAAW;QACvEC,OAAO,CAACC,GAAG,CAACb,SAAS,CAACM,KAAK,CAAC;QAC5BM,OAAO,CAACC,GAAG,CAACb,SAAS,CAACM,KAAK,CAAC;QAC5B;MACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGlB,GAAG,CAAC,IAAI,CAAC;IAE5B,MAAMmB,gBAAgB,GAAIC,KAAK,IAAK;MAClChB,YAAY,CAACK,KAAK,GAAGW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAE1C,IAAIlB,YAAY,CAACK,KAAK,EAAE;QACtB,MAAMc,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAE/BD,MAAM,CAACE,MAAM,GAAG,MAAM;UACpBP,UAAU,CAACT,KAAK,GAAGc,MAAM,CAACG,MAAM;QAClC,CAAC;QAEDH,MAAM,CAACI,aAAa,CAACvB,YAAY,CAACK,KAAK,CAAC;MAC1C;IACF,CAAC;;IAED;;IAEA,MAAMmB,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAIxB,YAAY,CAACK,KAAK,EAAE;QACtBJ,WAAW,CAAC,CAAC;MACf,CAAC,MAAM;QACLJ,OAAO,CAAC4B,OAAO,CAAC,gBAAgB,CAAC;MACnC;IACF,CAAC;IAED,SAASC,gBAAgBA,CAAA,EAAG;MAC1BC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAAC,CAAC;IAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}